apiVersion: v1
kind: Service
metadata:
  name: airflow-postgres
  namespace: airflow
spec:
  clusterIP: 10.96.2.7
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    name: airflow-postgres
  type: ClusterIP

---

kind: Service
apiVersion: v1
metadata:
  name: airflow-postgres
  namespace: airflow
spec:
  clusterIP: 10.96.2.7
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    name: airflow-postgres
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-postgres
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      name: airflow-postgres
  template:
    metadata:
      labels:
        name: airflow-postgres
    spec:
      containers:
      - name: airflow-postgres
        command: ["/bin/bash","-c"]
        args: ["postgres -c listen_addresses=* -c logging_collector=on -c log_destination=stderr -c max_connections=200"]
        securityContext:
          runAsUser: 999
          allowPrivilegeEscalation: false
        image: postgres:13.1
        imagePullPolicy: IfNotPresent
        restartPolicy: Always
        env:
        - name: POSTGRES_USER
          value: airflow
        - name: POSTGRES_DB
          value: airflow
        - name: POSTGRES_PASSWORD
          value: airflow
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
          - name: postgres
            containerPort: 5432
            hostPort: 5432
        resources:
          limits:
            cpu: 1
            memory: 100Mi
          requests:
            cpu: 0.2
            memory: 50Mi
        volumeMounts:
        - name: data-analyze
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: wei/pgdata
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - name: data-analyze
          persistentVolumeClaim:
            claimName: data-analyze


